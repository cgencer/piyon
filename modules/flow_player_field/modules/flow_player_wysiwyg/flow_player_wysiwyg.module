<?php

/**
 * @file
 * Module file for flow_player_wysiwyg.
 */

use Drupal\editor\Entity\Editor;
use Drupal\Core\Form\FormStateInterface;

// The documentation URL for the WYSIWYG filter.
define('FLOW_PLAYER_WYSIWYG_DOCUMENTATION_URL', 'https://www.drupal.org/node/flow_player_field');

/**
 * Implements hook_ckeditor_css_alter().
 */
function flow_player_wysiwyg_ckeditor_css_alter(array &$css, Editor $editor) {
  $css[] = drupal_get_path('module', 'flow_player_wysiwyg') . '/plugin/plugin.css';
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function flow_player_wysiwyg_form_filter_format_form_alter(&$form, $form_state, $form_id) {
  $form['#validate'][] = 'flow_player_wysiwyg_toolbar_filter_validate';
  $form['#validate'][] = 'flow_player_wysiwyg_filter_weight_validate';
}

/**
 * Validate callback to check if the filter and button are both enabled.
 */
function flow_player_wysiwyg_toolbar_filter_validate($form, FormStateInterface $form_state) {
  
  validateFields($form, $form_state);
  $filter_enabled = !empty($form_state->getValue(['filters', 'flow_player_wysiwyg', 'status']));
  $button_enabled = FALSE;
  $button_rows = json_decode($form_state->getValue(['editor', 'settings', 'toolbar', 'button_groups']), TRUE);
  if (!empty($button_rows)) {
    foreach ($button_rows as $button_row) {
      foreach ($button_row as $button_group) {
        foreach ($button_group['items'] as $item) {
          if ($item === 'flow_player') {
            $button_enabled = TRUE;
            break 2;
          }
        }
      }
    }
  }
  // The button and filter can either both be enabled or disabled.
  if ($filter_enabled !== $button_enabled) {
    $form_state->setError($form['filters']['status']['flow_player_wysiwyg'], t('To embed videos, make sure you have enabled the "Flowplayer WYSIWYG" filter and dragged the video icon into the WYSIWYG toolbar. For more information <a href="@url">read the documentation</a>.', ['@url' => FLOW_PLAYER_WYSIWYG_DOCUMENTATION_URL]));
  }
}

function validateFields($form, FormStateInterface $form_state) {
  $config = \Drupal::config('flow_player_field.settings');
  
  $apiKey = $config->get('api_key');
  if ($apiKey == '') {
    $form_state->setError(
        $form['filters']['status']['flow_player_wysiwyg'], 
        t('Please add the <strong>`Api Key`</strong> in the <a href="/admin/config/flow_player_field">settings</a> for Flow Player. For more information <a href="@url">read the documentation</a>.', ['@url' => FLOW_PLAYER_WYSIWYG_DOCUMENTATION_URL]));
  }

  $siteId = $config->get('site_id');
  if ($siteId == '') {
    $form_state->setError(
        $form['filters']['status']['flow_player_wysiwyg'], 
        t('Please add the <strong>`Site ID`</strong> in the <a href="/admin/config/flow_player_field">settings</a> for Flow Player. For more information <a href="@url">read the documentation</a>.', ['@url' => FLOW_PLAYER_WYSIWYG_DOCUMENTATION_URL]));
  }

  $flowplayerHtml = $config->get('flowplayer_html');
  if ($flowplayerHtml == '') {
    $form_state->setError(
        $form['filters']['status']['flow_player_wysiwyg'], 
        t('Please add the <strong>`Embed Code`</strong> in the <a href="/admin/config/flow_player_field">settings</a> for Flow Player. For more information <a href="@url">read the documentation</a>.', ['@url' => FLOW_PLAYER_WYSIWYG_DOCUMENTATION_URL]));
  }

  $index1 = strpos($flowplayerHtml, '<iframe', 0);
  $index2 = strpos($flowplayerHtml, '</iframe>', 0);
  $index3 = strpos($flowplayerHtml, '[PLAYERID]', 0);
  $index4 = strpos($flowplayerHtml, '[VIDEOID]', 0);

  if (!$index1 || !$index2 || !$index3 || !$index4) {
    $form_state->setError(
        $form['filters']['status']['flow_player_wysiwyg'], 
        t('The <strong>`Embed Code`</strong> in the <a href="/admin/config/flow_player_field">settings</a> for Flow Player is not correct. For more information <a href="@url">read the documentation</a>.', ['@url' => FLOW_PLAYER_WYSIWYG_DOCUMENTATION_URL]));
  }
}

/**
 * Validate the filters are not in an order that will cause conflicts.
 */
function flow_player_wysiwyg_filter_weight_validate($form, FormStateInterface $form_state) {
  // Don't validate if the WYSIWYG filter is not enabled.
  if (empty($form_state->getValue(['filters', 'flow_player_wysiwyg', 'status']))) {
    return;
  }

  $wysiwyg_weight = $form_state->getValue(['filters', 'flow_player_wysiwyg', 'weight']);

  // Check the WYSIWYG filter runs before url filtering.
  if (!empty($form_state->getValue(['filters', 'filter_url', 'status']))) {
    $filter_weight = $form_state->getValue(['filters', 'filter_url', 'weight']);
    if ($wysiwyg_weight > $filter_weight) {
      $form_state->setError($form['filters']['status']['flow_player_wysiwyg'], t('The "Flowplayer WYSIWYG" filter must run before the "Convert URLs into links" filter to function correctly. For more information <a href="@url">read the documentation</a>.', ['@url' => FLOW_PLAYER_WYSIWYG_DOCUMENTATION_URL]));
    }
  }
  // Check the WYSIWYG filter runs after the HTML tag filter.
  if (!empty($form_state->getValue(['filters', 'filter_html', 'status']))) {
    $html_filter_weight = $form_state->getValue(['filters', 'filter_html', 'weight']);
    if ($wysiwyg_weight < $html_filter_weight) {
      $form_state->setError($form['filters']['status']['flow_player_wysiwyg'], t('The "Flowplayer WYSIWYG" filter must run after the "Limit allowed HTML tags" filter to function correctly. For more information <a href="@url">read the documentation</a>.', ['@url' => FLOW_PLAYER_WYSIWYG_DOCUMENTATION_URL]));
    }
  }
}
